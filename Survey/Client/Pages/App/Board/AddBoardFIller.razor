@using Survey.Shared.DTOs
@attribute [Microsoft.AspNetCore.Components.RouteAttribute(Constants.FRONTEND_URL.ADD_BOARDFILLERS + "/{BoardId}")]
@using System.Linq

@inject BoardRepository boardRepository

<EditForm Model="boardFillerGenerationDto">
    <DataAnnotationsValidator />
    <div class="form-group">
        @for (int i = 0; i < list.Count(); i++)
        {
            var iCopy = i;

                <p>
                    <label for="@($"effect{i}")">@i</label>
                    <input id="@($"effect{i}")" value="@list[i]"
                       @oninput="@(e => SajatOnInput(e,iCopy,(e?.Value?.ToString() ?? "")))"
                       />
                </p>
        }
    </div>
    <button class="btn btn-success" @onclick="OnValidInput" type="submit">Save changes</button>
</EditForm>

@content

@code {
    public string? value2 { get; set; }
    public int index { get; set; } = 0;

    public string? content { get; set; }

    [Parameter]
    public string BoardId { get; set; } = default!;

    public List<string> list { get; set; } = new List<string>() { string.Empty };

    public void SajatOnInput(ChangeEventArgs a, int iCopy, string text)
    {
        list[iCopy] = text;
        value2 = (string?)a.Value;
        StateHasChanged();

        for (int i = 0; i < list.Count() - 1; i++)
        {
            if (list[i] == string.Empty)
            {
                list.RemoveAt(i);
            }
        }

        if (!list.Where(x => x == string.Empty).Any())
        {
            list.Add(string.Empty);

        }


    }

    public BoardFillerGenerationDto boardFillerGenerationDto { get; set; } = new BoardFillerGenerationDto("dsfd", new List<string>());

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
    private async Task OnValidInput()
    {
        BoardFillerGenerationDto boardFillerGenerationDto = 
            new BoardFillerGenerationDto(BoardId, list.Where(x => x != string.Empty).ToList());

        HttpResponseMessage? a = await boardRepository.GenerateByEmail(boardFillerGenerationDto);


        if (a != null)
        {
            content = await a.Content.ReadAsStringAsync();
        }


    }

}
