@attribute [Microsoft.AspNetCore.Components.RouteAttribute(Constants.FRONTEND_URL.BOARD_MANAGER)]

@using Survey.Client.Repository.Interfaces
@using Microsoft.AspNetCore.Authorization
@using Survey.Shared.Model
@using System.Linq
@using Survey.Client.Pages.App
@inject NavigationManager NavigationManager
@using Survey.Client.Pages.App.Util

@attribute [Authorize]
@inject DialogService dialogService



<RadzenButton Text=@($"Add new Board") Click="@(
            args =>
{
                dialogService.Open<DialogEditBoard>
                        ($"Edit board",
                        new Dictionary<string, object>(){
                            {"boardModel", boardModel},
                            {"MakeNewSurveyBoard", new EventCallbackFactory().CreateInferred(this, MakeNewSurveyBoard, boardModel)}
                        },
                        new DialogOptions()
                            {
                            Width = "700px",
                            Height = "530px",
                            Left = "calc(50% - 350px)",
                            Top = "calc(50% - 265px)"
                            }
                        );

 }                       )" />

@foreach (var board in BoardList ?? Enumerable.Empty<BoardModel>())
{
    <div class="card" style="width: 18rem;">
        <AuthorizeView Roles="Admin, BoardAdmin">
            <Authorized>
                <div class="float-right">
                    <button @onclick="@(()=>Delete(board))" class="close" aria-label="Close">
                        <span aria-hidden="true">
                            &times;
                        </span>
                    </button>
                </div>
                <RadzenButton Text=@($"Update Board") Click="@(
            args =>
{
                dialogService.Open<DialogEditBoard>
                        ($"Edit board",
                        new Dictionary<string, object>(){
                            {"boardModel", board},
                            {"MakeNewSurveyBoard", new EventCallbackFactory().CreateInferred(this, MakeNewSurveyBoard, board)}

                        },
                        new DialogOptions()
                            {
                                Width = "700px",
                                Height = "530px",
                                Left = "calc(50% - 350px)",
                                Top = "calc(50% - 265px)"
                            }
                        );

 }                       )"><i class="fas fa-pen"></i></RadzenButton>


                <h6>@board.ExpDate.ToString("dd/MM/yyyy")</h6>
                <h6>@board.Name</h6>

                <a @onclick="@(() => {
                       NavigationManager.NavigateTo(Constants.FRONTEND_URL.BOARD_MANAGER +"/"+ board.Id);
                   })" class="btn btn-info" role="button">View board</a>
                <a @onclick="@(() => {
                       NavigationManager.NavigateTo(Constants.FRONTEND_URL.SUMMARY +"/"+ board.Id);
                   })" class="btn btn-info" role="button">Summary</a>
            </Authorized>
        </AuthorizeView>
    </div>
}

@code {

}
