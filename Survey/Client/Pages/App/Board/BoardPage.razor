@attribute [Microsoft.AspNetCore.Components.RouteAttribute(Constants.FRONTEND_URL.BOARD_MANAGER)]

@using Survey.Client.Repository.Interfaces
@inject IBoardRepository BoardRepository
@using Microsoft.AspNetCore.Authorization
@using Survey.Shared.Model
@using System.Linq
@inject NavigationManager NavigationManager

@attribute [Authorize]
<AuthorizeView>
    <Authorized>
        <h3>BoardPage</h3>
        <button class="btn btn-primary" @onclick="MakeNewSurveyBoard">Make a new Survey board</button>
    </Authorized>
</AuthorizeView>
@foreach (var board in BoardList ?? Enumerable.Empty<BoardModel>())
{
    <h2 style="background-color:rebeccapurple">@board.OwnerUser?.Email</h2>
    <a @onclick="@(() => {
                       NavigationManager.NavigateTo(Constants.FRONTEND_URL.BOARD_MANAGER +"/"+ board.Id);
                   })" class="btn btn-info" role="button">Link Button</a>

}


@code {

    string alma = "alma";
    private async void MakeNewSurveyBoard()
    {
        BoardModel boardModel = new BoardModel();

        bool ifSucceded = await BoardRepository.CreateBoard(new Survey.Shared.Model.BoardModel());
        if (ifSucceded)
        {
            BoardList?.Add(boardModel);
        }
        await LoadCard();
    }

    public List<BoardModel>? BoardList { get; set; } = new List<BoardModel>();

    private async Task LoadCard()
    {
        BoardList = await BoardRepository.GetBoardOfUser();
        StateHasChanged();
    }
    protected async override void OnInitialized()
    {
        await LoadCard();
    }

}
