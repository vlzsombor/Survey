@page "/app"
@using Survey.Client.Unit
@using Survey.Shared.Model
@using Survey.Client.Pages.App.Card
@inject ICardRepository cardRepository
<h3>MainPage</h3>

<Survey.Client.Pages.App.Card.CardForm cardModel="@cardModel" OnValidSubmit="@Create" />


@foreach (var cardItem in CardList)
{
    <CardSimple OnClose="((args) => OnClose((int) args))" OnRatingChanges="@(OnRateChange)" CardModel="cardItem"></CardSimple>
}

@code {
    public List<CardModel> CardList { get; set; } = new List<CardModel>();

    private CardModel cardModel = new CardModel();

    private async void Create()
    {
        await cardRepository.CreateCard(cardModel);
        await loadCard();
    }


    private async Task OnClose(int id)
    {
        await cardRepository.DeleteCard(CardList.Where(x=>x.Id==id).FirstOrDefault());
        StateHasChanged();

    }

    private async Task loadCard()
    {
        CardList = await cardRepository.GetAllCards();
        StateHasChanged();

    }

    protected async override void OnInitialized()
    {
        await loadCard();
    }

    public void OnRateChange(CardModel args)
    {
        
        cardRepository.UpdateCardRating(args);
    }

}



