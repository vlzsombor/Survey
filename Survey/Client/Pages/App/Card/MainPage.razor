@using Microsoft.AspNetCore.Authorization
@using Survey.Client.Auth
@using Survey.Shared.Model
@using Survey.Shared.Model.Comment
@using Survey.Shared.DTOs

@using System.Linq

@using Survey.Client.Pages.Auth
@attribute [Authorize]


<h3>MainPage</h3>
@if (0 >= DateTime.Compare(ExpTime, DateTime.Now))
{
    <h1>Voting time is over</h1>
}
else
{
    <AuthorizeView Roles="Admin, BoardAdmin">
        <a @onclick="@(() => {navigationManager.NavigateTo(Constants.FRONTEND_URL.ADD_BOARDFILLERS + "/" + Guid);})" class="btn btn-info" role="button">Add Board filler</a>
    </AuthorizeView>

    <AuthorizeView>
        <Authorized>
            <Survey.Client.Pages.App.Card.CardForm cardModel="@cardModel" OnValidSubmit="@Create"
                                               Tags="@(Tags)"
                                               SearchMethod="SearchMethod" />
            @foreach (var cardItem in CardList ?? Enumerable.Empty<CardRatingDto>())
            {
                <CardSimple OnDelete="@(OnDelete)"
                    OnChange="@((args) => UpdateCardRating(((int, CardModel))args))"
                    CardModel="cardItem"
                    AddReply="@((args) => AddReply(((string, IRepliable))args))"
                    NavigateCommand="NavigateCommand"></CardSimple>
            }
        </Authorized>
        @*    <NotAuthorized>
            <PasswordLogin LoadCardEventCallBack="@(LoadCard)" BoardFillerDto="BoardFillerDto"></PasswordLogin>
            </NotAuthorized>*@
    </AuthorizeView>

}


@code {
    [Parameter]
    public IList<string> Tags { get; set; } = new List<string>();
}



