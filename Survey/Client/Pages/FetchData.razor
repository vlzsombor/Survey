@page "/fetchdata"
@using Survey.Shared
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <div class="spinner-border" role="status">
        <p><em>Loading...</em></p>
        <span class="sr-only">Loading...</span>
    </div>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    [CascadingParameter]
    public Error Error { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        HttpResponseMessage a = await Http.GetAsync("WeatherForecast");

        if (!a.IsSuccessStatusCode)
        {
            Error.ProcessError(a);
            return;
        }
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");

    }

}
